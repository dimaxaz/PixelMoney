1. Цели и задачи тестового проекта

1.1 Определение целей
Создать минимально жизнеспособный игровой движок (MVP).
Реализовать базовую функциональность: рендеринг графики, обработка ввода пользователя, управление объектами.
Использовать современные практики разработки на C++.
1.2 Задачи проекта
Настроить структуру проекта.
Создать систему обработки событий.
Реализовать простой графический вывод.
Добавить поддержку основных игровых объектов (например, спрайтов).
2. Технические требования
2.1 Оборудование и ПО
Компьютер с установленной ОС Windows, Linux или macOS.
Установленный компилятор C++ (GCC, Clang, MSVC).
IDE или текстовый редактор (например, Visual Studio, CLion, VSCode).
Установленные библиотеки:
SFML или SDL для работы с графикой и аудио.
GLM для математики (векторы, матрицы).
Assimp для загрузки 3D-моделей (если требуется).

/PixelMoney
│
├── /src                # Исходные файлы
│   ├── main.cpp        # Точка входа в программу
│   ├── Engine.h        # Заголовочный файл движка
│   ├── Engine.cpp      # Реализация движка
│   ├── InputManager.h   # Менеджер ввода
│   ├── InputManager.cpp # Реализация менеджера ввода
│   ├── GameObject.h    # Объявление игрового объекта
│   ├── GameObject.cpp  # Реализация игрового объекта
│   └── ...             # Другие модули
│
├── /include            # Заголовочные файлы библиотек
│
├── /lib                # Библиотеки
│
├── /assets             # Ресурсы (текстуры, модели, звуки)
│
└── CMakeLists.txt      # Система сборки (CMake)







